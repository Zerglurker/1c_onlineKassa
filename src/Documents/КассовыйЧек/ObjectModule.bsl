//////////////////////////////////////////////////////////////////////////////////
//
//
//
//


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ТипОперации =  enums.ТипОперацииЧека.sell;
	
	//контроль не делаем: если руками то не наше дело, 
	// если программно за них отвечает запускающая обработка
	if typeOf(ДанныеЗаполнения) = type("DocumentRef.ПлатежноеПоручение") then
		КонтрольнаяСумма  = ДанныеЗаполнения.Сумма;
		Контрагент  =       ДанныеЗаполнения.Плательщик;
		Основание   =       ДанныеЗаполнения;
		
		//if  ValueIsFilled(ДанныеЗаполнения.Договор) 
		//	and ДанныеЗаполнения.Договор.Квитанции.Count()>0 then
		//	
		//	aSumm    = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеЗаполнения.Сумма,    ДанныеЗаполнения.Договор.Квитанции.UnloadColumn("Сумма"),2); 
		//	aSummNDS = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(ДанныеЗаполнения.СуммаНДС, ДанныеЗаполнения.Договор.Квитанции.UnloadColumn("Сумма"),2); 
		//	
		//	Товары.Clear();
		//	for each rowC in ДанныеЗаполнения.Договор.Квитанции do	
		//		newRow = Товары.Add();
		//		newRow.Услуга = rowC.Услуга;
		//		newRow.ВидОплаты = enums.ВидОплаты.ЭлектронныйПлатеж;
		//		newRow.Сумма     = aSumm[idx];
		//		if aSummNDS<>undefined then
		//			newRow.СуммаНДС  = aSummNDS[idx];
		//		endIf;
		//		idx = idx + 1;
		//	endDo;
		//endif;	
	endif;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	if ОбменДанными.Загрузка then
		return;
	endif;
	
	Summ = 0;
	for each row in Товары do
		if not ValueIsFilled(row.ВидОплаты) then
			row.ВидОплаты = enums.ВидОплаты.ЭлектронныйПлатеж;
		endif;	
		Summ = Summ + row.Сумма;
	endDo;
	
	//if КонтрольнаяСумма = 0 then
	//	КонтрольнаяСумма = Summ;
	//endif;
	
	//Основание используеться для связки чека и платежки
	if DeletionMark then
		
		if Обработан and not Ref.DeletionMark then
			Отказ = true;
			return;
		endif;	
		
		ОснованиеУдаленное = Основание;
		Основание = undefined;
	else
		if not ValueIsFilled(Основание) then
			Основание = ОснованиеУдаленное;
		endif;	
	endif;	
	
КонецПроцедуры
